/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Arrays;

class CountingCardsTest {
    // Static arrays to be shuffled
    private static final int[] ARRAY_1 = {1, 2, 3};
    private static final int[] ARRAY_2 = {1, 2, 3, 4, 5};
    private static final int[] ARRAY_3 = {10, 20, 30, 40, 50, 60, 70, 80, 90, 100};
    private static final int[] ARRAY_4 = {11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25};

    // Tests for firstShuffle
    @Test
    void testFirstShuffleOnArray1() {
        int[] shuffled = CountingCards.firstShuffle(ARRAY_1);
        assertFalse(Arrays.equals(ARRAY_1,shuffled));
    }

    @Test
    void testFirstShuffleOnArray2() {
        int[] shuffled = CountingCards.firstShuffle(ARRAY_2);
        assertFalse(Arrays.equals(ARRAY_2,shuffled));
    }

    @Test
    void testFirstShuffleOnArray3() {
        int[] shuffled = CountingCards.firstShuffle(ARRAY_3);
        assertFalse(Arrays.equals(ARRAY_3,shuffled));
    }

    @Test
    void testFirstShuffleOnArray4() {
        int[] shuffled = CountingCards.firstShuffle(ARRAY_4);
        assertFalse(Arrays.equals(ARRAY_4,shuffled));
    }

    // Tests for secondShuffle
    @Test
    void testSecondShuffleOnArray1() {
        int[] shuffled = CountingCards.secondShuffle(ARRAY_1);
        assertFalse(Arrays.equals(ARRAY_1,shuffled));
    }

    @Test
    void testSecondShuffleOnArray2() {
        int[] shuffled = CountingCards.secondShuffle(ARRAY_2);
        assertFalse(Arrays.equals(ARRAY_2,shuffled));
    }

    @Test
    void testSecondShuffleOnArray3() {
        int[] shuffled = CountingCards.secondShuffle(ARRAY_3);
        assertFalse(Arrays.equals(ARRAY_3,shuffled));
    }

    @Test
    void testSecondShuffleOnArray4() {
        int[] shuffled = CountingCards.secondShuffle(ARRAY_4);
        assertFalse(Arrays.equals(ARRAY_4,shuffled));
    }

    // Tests for thirdShuffle (Fisher-Yates)
    @Test
    void testThirdShuffleOnArray1() {
        int[] shuffled = ARRAY_1.clone();  
        CountingCards.thirdShuffle(shuffled);  
        assertFalse(Arrays.equals(shuffled, ARRAY_1));
    }

    @Test
    void testThirdShuffleOnArray2() {
        int[] shuffled = ARRAY_2.clone();  
        CountingCards.thirdShuffle(shuffled);  
        assertFalse(Arrays.equals(shuffled, ARRAY_2));
    }

    @Test
    void testThirdShuffleOnArray3() {
        int[] shuffled = ARRAY_3.clone();  
        CountingCards.thirdShuffle(shuffled);  
        assertFalse(Arrays.equals(shuffled, ARRAY_3));
    }

    @Test
    void testThirdShuffleOnArray4() {
        int[] shuffled = ARRAY_4.clone();  
        CountingCards.thirdShuffle(shuffled);  
        assertFalse(Arrays.equals(shuffled, ARRAY_4));
    }



}
